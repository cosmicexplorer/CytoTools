% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/string.R
\name{sort_by_component}
\alias{sort_by_component}
\title{Sort strings by splitting and ordering.}
\usage{
sort_by_component(strs, split_by, orders = list(), fixed = TRUE,
  value = TRUE)
}
\arguments{
\item{strs}{character vector of strings to be sorted.}

\item{split_by}{character vector used to split \code{strs} into
components. This is interpreted as either fixed strings or PCRE regular
expressions according to \code{fixed}.}

\item{orders}{list of character vectors indicating a lexicographic ordering
for each component.}

\item{fixed}{logical. How to interpret \code{split_by}. If \code{TRUE},
\code{split_by} is treated as fixed strings, otherwise as PCRE regular
expressions.}

\item{value}{logical. Whether to return the sorted strings or the permutation
of the input.}
}
\value{
If \code{value = TRUE} return the sorted character vector,
otherwise an integer vector which represents the permutation of
\code{strs} which produces the sorted result (as in \code{\link[=order]{order()}}).
}
\description{
\code{sort_by_component} splits strings into lists of
components, then orders them lexicographically by the value of each
succeeding component.
}
\details{
\code{\link[=multi_str_split]{multi_str_split()}} is used to split each string of
\code{strs} into a vector of substrings using the elements of
\code{split_by}. \code{split_by} is interpreted as either fixed strings
or PCRE regular expressions according to \code{fixed}.\preformatted{Splitting a string produces a vector of substrings which occur between
each occurrence of each splitting string or regular expression. For
example, splitting the string `"A:B:C"` by `":"` produces the
vector `c("A", "B", "C")`, which we call its *components*.

Note that `split_by = ""` or `split_by = character(0)` splits
each string of `strs` into their individual characters as
components.

Each succeeding character vector in `orders` is used to sort the
component at the corresponding index in a lexicographic order. This means
that the character vector at index 1 of `orders` is used to sort the
first component of each input string, index 2 sorts the second, and so
on, and that the sorting of earlier components takes precedence over
later components.

The character vectors in `orders` are used to sort each component
`c` of each string `s` at a given index `i` as
follows. The components which match *exactly* some element of the
vector `v` at index `i` of `orders` are sorted in the
order given by `v`, while the components which do not show up in
`v` are sorted using [order()]. The components which
*do* show up in `v` are then sorted before the components which
do not.

Note that this function will throw an exception if `v`
contains any duplicates. In addition, if `length(orders) == n` for
some integer `n`, all components at indices greater than `n`
are sorted purely by their relative string value, but still only compared
to other components at the same index.

Lexicographical (sometimes called hierarchical) sorting means that if two
strings are split into the exact same components up to the index
`k`, then differ at index `k + 1`, then their relative order is
determined by the ordering of component `k + 1` of the two
strings. If there is no component at which strings differ in sorting,
they have no relative order, and they may be sorted either way. This
means that this function does not perform a *stable sort*.

If one string `s_1` is split into `k` components and another
string `s_2` splits into more than `k` components, and the two
strings have equal components up to index `k`, then `s_1` is
sorted before `s_2`.
}
}
\examples{
data_files <- c("MB004_6m_panel2.fcs", "MB004_3wk_panel2.fcs",
                "MB004_12wk_panel2.fcs", "MB004_pre_panel2.fcs",
                "MB005_12wk_panel2.fcs")

sort_by_component(
    data_files,
    split_by = c("_"),
    orders = list(c("MB005"), c("pre", "3wk", "12wk", "6m")))

## [1] "MB005_12wk_panel2.fcs" "MB004_pre_panel2.fcs"
## [3] "MB004_3wk_panel2.fcs"  "MB004_12wk_panel2.fcs"
## [5] "MB004_6m_panel2.fcs"

}
\seealso{
\code{\link[=multi_str_split]{multi_str_split()}} is used to split each input string. \code{\link[=order]{order()}} is
an example of another function which returns a permutation of the input
as an integer vector.
}
